@model IEnumerable<WebBanHang.Models.ApplicationUser>
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using System.Collections.Generic;
@using System.Linq;
@using WebBanHang.Models;
@{
    ViewBag.Title = "Quản lý tài khoản";
}


<!-- Content Header (Page header) -->
@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="~/admin/home" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/account" class="nav-link">@ViewBag.Title</a>
        </li>
    </ul>
}

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Danh sách tài khoản</h3>

            <div class="card-tools">
                <a href="/admin/account/create" class="btn btn-success">Thêm mới</a>
            </div>
        </div>
        <div class="card-body">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Tài khoản</th>
                        <th>Họ tên</th>
                        <th>Quyền</th>
                        <th>Email</th>
                        <th>Ngày tạo</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        ApplicationDbContext db = new ApplicationDbContext();
                        var roleManager = new RoleManager<IdentityRole>(new RoleStore<IdentityRole>(db));
                    }

                    @if (Model != null && Model.Any())
                    {

                        var i = 1;
                        foreach (var item in Model)
                        {
                            var userrole = db.Set<IdentityUserRole>().FirstOrDefault(x => x.UserId == item.Id);
                            var role = roleManager.FindById(userrole.RoleId);

                            <tr id="trow_@item.Id">
                                <td>@i</td>
                                <td>@item.UserName</td>
                                <td>@item.FullName</td>
                                <td>@role.Name</td>
                                <td>@item.Email</td>
                                <td>@item.CreateByDay.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <a href="/admin/account/edit/@item.Id" class="btn btn-primary">Sửa</a>
                                    <a href="#" class="btn btn-danger" data-id="@item.Id" id="btnDelete">Xóa</a>
                                </td>
                            </tr>
                            i++;
                        }
                    }
                </tbody>
            </table>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">

        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
@section scripts{
    <script>
        $(document).ready(function () {
            $('body').on('click', '#btnDelete', function () {

                var id = $(this).data("id");

                $.ajax({
                    url: '/admin/account/delete',
                    type: 'POST',
                    data: { userId: id },
                    success: function (res) {
                        if (res.success) {
                            $('#trow_' + id).remove();
                        }
                    }
                })
            })


        })
    </script>

}




